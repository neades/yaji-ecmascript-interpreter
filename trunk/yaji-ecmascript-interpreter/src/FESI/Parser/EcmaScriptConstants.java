/* Generated By:JJTree&JavaCC: Do not edit this line. EcmaScriptConstants.java */
package FESI.Parser;

public interface EcmaScriptConstants {

  int EOF = 0;
  int EOL = 5;
  int SINGLE_LINE_COMMENT = 8;
  int MULTI_LINE_COMMENT = 9;
  int BREAK = 11;
  int CONTINUE = 12;
  int DELETE = 13;
  int ELSE = 14;
  int FOR = 15;
  int FUNCTION = 16;
  int IF = 17;
  int IN = 18;
  int NEW = 19;
  int RETURN = 20;
  int THIS = 21;
  int TYPEOF = 22;
  int VAR = 23;
  int VOID = 24;
  int WHILE = 25;
  int WITH = 26;
  int CASE = 27;
  int CATCH = 28;
  int CLASS = 29;
  int CONST = 30;
  int DEBUGGER = 31;
  int _DEFAULT = 32;
  int DO = 33;
  int ENUM = 34;
  int EXPORT = 35;
  int EXTENDS = 36;
  int FINALLY = 37;
  int IMPORT = 38;
  int SUPER = 39;
  int SWITCH = 40;
  int THROW = 41;
  int TRY = 42;
  int TRUE = 43;
  int FALSE = 44;
  int NULL = 45;
  int DECIMAL_LITERAL = 46;
  int HEX_LITERAL = 47;
  int OCTAL_LITERAL = 48;
  int FLOATING_POINT_LITERAL = 49;
  int EXPONENT = 50;
  int STRING_LITERAL = 51;
  int ESCAPE_SEQUENCE = 52;
  int UNTERMINATED_STRING_LITERAL = 53;
  int IDENTIFIER = 54;
  int LETTER = 55;
  int DIGIT = 56;
  int LPAREN = 57;
  int RPAREN = 58;
  int LBRACE = 59;
  int RBRACE = 60;
  int LBRACKET = 61;
  int RBRACKET = 62;
  int SEMICOLON = 63;
  int COMMA = 64;
  int DOT = 65;
  int ASSIGN = 66;
  int GT = 67;
  int LT = 68;
  int BANG = 69;
  int TILDE = 70;
  int HOOK = 71;
  int COLON = 72;
  int EQ = 73;
  int LE = 74;
  int GE = 75;
  int NE = 76;
  int SC_OR = 77;
  int SC_AND = 78;
  int INCR = 79;
  int DECR = 80;
  int PLUS = 81;
  int MINUS = 82;
  int STAR = 83;
  int SLASH = 84;
  int BIT_AND = 85;
  int BIT_OR = 86;
  int XOR = 87;
  int REM = 88;
  int LSHIFT = 89;
  int RSIGNEDSHIFT = 90;
  int RUNSIGNEDSHIFT = 91;
  int PLUSASSIGN = 92;
  int MINUSASSIGN = 93;
  int STARASSIGN = 94;
  int SLASHASSIGN = 95;
  int ANDASSIGN = 96;
  int ORASSIGN = 97;
  int XORASSIGN = 98;
  int REMASSIGN = 99;
  int LSHIFTASSIGN = 100;
  int RSIGNEDSHIFTASSIGN = 101;
  int RUNSIGNEDSHIFTASSIGN = 102;

  int DEFAULT = 0;
  int IN_SINGLE_LINE_COMMENT = 1;
  int IN_MULTI_LINE_COMMENT = 2;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\"\\f\"",
    "<EOL>",
    "\"//\"",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "<token of kind 10>",
    "\"break\"",
    "\"continue\"",
    "\"delete\"",
    "\"else\"",
    "\"for\"",
    "\"function\"",
    "\"if\"",
    "\"in\"",
    "\"new\"",
    "\"return\"",
    "\"this\"",
    "\"typeof\"",
    "\"var\"",
    "\"void\"",
    "\"while\"",
    "\"with\"",
    "\"case\"",
    "\"catch\"",
    "\"class\"",
    "\"const\"",
    "\"debugger\"",
    "\"default\"",
    "\"do\"",
    "\"enum\"",
    "\"export\"",
    "\"extends\"",
    "\"finally\"",
    "\"import\"",
    "\"super\"",
    "\"switch\"",
    "\"throw\"",
    "\"try\"",
    "\"true\"",
    "\"false\"",
    "\"null\"",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<STRING_LITERAL>",
    "<ESCAPE_SEQUENCE>",
    "<UNTERMINATED_STRING_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\">>\"",
    "\">>>\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"%=\"",
    "\"<<=\"",
    "\">>=\"",
    "\">>>=\"",
  };

}
