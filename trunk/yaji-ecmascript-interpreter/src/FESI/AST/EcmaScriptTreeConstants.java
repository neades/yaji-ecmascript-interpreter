/* Generated By:JavaCC: Do not edit this line. EcmaScriptTreeConstants.java Version 5.0 */
package FESI.AST;


public interface EcmaScriptTreeConstants
{
  public int JJTLITERAL = 0;
  public int JJTVOID = 1;
  public int JJTIDENTIFIER = 2;
  public int JJTTHISREFERENCE = 3;
  public int JJTSUPERREFERENCE = 4;
  public int JJTCOMPOSITEREFERENCE = 5;
  public int JJTFUNCTIONEXPRESSION = 6;
  public int JJTFORMALPARAMETERLIST = 7;
  public int JJTFUNCTIONCALLPARAMETERS = 8;
  public int JJTPROPERTYVALUEREFERENCE = 9;
  public int JJTPROPERTYIDENTIFIERREFERENCE = 10;
  public int JJTALLOCATIONEXPRESSION = 11;
  public int JJTOBJECTLITERAL = 12;
  public int JJTPROPERTYNAMEANDVALUE = 13;
  public int JJTOPERATOR = 14;
  public int JJTPOSTFIXEXPRESSION = 15;
  public int JJTUNARYEXPRESSION = 16;
  public int JJTBINARYEXPRESSIONSEQUENCE = 17;
  public int JJTANDEXPRESSIONSEQUENCE = 18;
  public int JJTOREXPRESSIONSEQUENCE = 19;
  public int JJTCONDITIONALEXPRESSION = 20;
  public int JJTASSIGNMENTEXPRESSION = 21;
  public int JJTEXPRESSIONLIST = 22;
  public int JJTSTATEMENT = 23;
  public int JJTSTATEMENTLIST = 24;
  public int JJTVARIABLEDECLARATION = 25;
  public int JJTIFSTATEMENT = 26;
  public int JJTWHILESTATEMENT = 27;
  public int JJTFORSTATEMENT = 28;
  public int JJTEMPTYEXPRESSION = 29;
  public int JJTFORVARSTATEMENT = 30;
  public int JJTFORINSTATEMENT = 31;
  public int JJTFORVARINSTATEMENT = 32;
  public int JJTCONTINUESTATEMENT = 33;
  public int JJTBREAKSTATEMENT = 34;
  public int JJTRETURNSTATEMENT = 35;
  public int JJTWITHSTATEMENT = 36;
  public int JJTFUNCTIONDECLARATION = 37;
  public int JJTPROGRAM = 38;


  public String[] jjtNodeName = {
    "Literal",
    "void",
    "Identifier",
    "ThisReference",
    "SuperReference",
    "CompositeReference",
    "FunctionExpression",
    "FormalParameterList",
    "FunctionCallParameters",
    "PropertyValueReference",
    "PropertyIdentifierReference",
    "AllocationExpression",
    "ObjectLiteral",
    "PropertyNameAndValue",
    "Operator",
    "PostfixExpression",
    "UnaryExpression",
    "BinaryExpressionSequence",
    "AndExpressionSequence",
    "OrExpressionSequence",
    "ConditionalExpression",
    "AssignmentExpression",
    "ExpressionList",
    "Statement",
    "StatementList",
    "VariableDeclaration",
    "IfStatement",
    "WhileStatement",
    "ForStatement",
    "EmptyExpression",
    "ForVarStatement",
    "ForInStatement",
    "ForVarInStatement",
    "ContinueStatement",
    "BreakStatement",
    "ReturnStatement",
    "WithStatement",
    "FunctionDeclaration",
    "Program",
  };
}
/* JavaCC - OriginalChecksum=18129b56ff1497909d15829cd879d6aa (do not edit this line) */
