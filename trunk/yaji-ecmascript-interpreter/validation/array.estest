// array.estest
// FESI Copyright (c) Jean-Marc Lugrin, 1999
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.

// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

writeln ("// " + document.URL);
writeln ("// " + Date());
writeln ("// Test Array");
writeln();

// 15.4
@test array.1
a = Array(1,2,3)
String(a)=="1,2,3" && a.length == 3 && a[1]==2;

@test array.2
a = new Array(1,2,3,4)
a.toString()=="1,2,3,4" && a.length==4 && a[1]==2;

@test array.3
a = new Array(12)
a.length==12;

@test array.4
a = new Array()
a.length==0 && a.join()=="";

@test array.5
a = new Array("aa");
a.length==1 && a[0]=="aa";

@test array.6
Array.length == 1 && Array.prototype.length==0;

@test array.7
a = new Array(1,"aa",12.5);
a.join("@@")=="1@@aa@@12.5"

@test array.8
a.reverse().toString()=="12.5,aa,1";

@test array.9
a.sort().join()=="1,12.5,aa";

@test array.10
a[10]="dix";
a.length==11;

@test array.11
a.length=20;
a[10]=="dix" && a.length==20;

@test array.12
a.toString()=="1,12.5,aa,,,,,,,,dix,,,,,,,,,";

@test array.13
a.length=4;
a.join("$")=="1$12.5$aa$$$$$$$$dix";

@test array.14
a = new Array (2433,54,44,434);
f = new Function ("a, b", "if (a < b) return -1; if (a == b) return 0; return 1;");
a.sort(f).join()=="44,54,434,2433";

@test array.15
a = [];
a.length==0;

@test array.16
a = [,];
a.length==1;

@test array.17
a = [,,];
a.length==2;

@test array.18
a = [1,2]
a.length==2 && String(a) == "1,2"

@test array.19
a = [1,2,3,4];
a.length==4 && a[2]==3

@test array.20
a = [,,,4,5,,,8,9,];
a.length==9 && a.reverse().toString()=="9,8,,,5,4,,,";

@test array.21
a = ['a', ,1,Math.round(3.14159),,,];
a[3] == 3

@test array.22
a = [1,2,3,4]
b = a.slice(2,4);
b[0] == 3 && b[1] == 4;

@test array.prototype.push.1
a = [1,2,3,4]
a.push(5);
a.length == 5 && a[4] == 5

@test array.prototype.pop.1
a = [1,2,3,4]
b = a.pop()
a.length == 3 && b == 4

@test array.prototype.shift.1
a = [1,2,3,4]
b = a.shift()
a.length == 3 && b == 1

@test array.prototype.unshift.1
a = [1,2,3,4]
b = a.unshift(-1,null,0);
a.length == 7 && b == a.length && a[0] == -1

@test array.prototype.slice.1
a = [1,2,3,4]
b = a.slice(2,4)
a.length == 4 && b.length == 2 && b[0] == 3 && b[1] == 4

@test array.splice.1
a = [1,2,3,4]
a.splice(2, 0, 99)
a.length == 5 && a[2] == 99

@test array.splice.2
a = [1,2,3,4]
b = a.splice(2, 1, 99)
a.length == 4 && a[2] == 99 && b == 3

@test array.splice.3
a = [1,2,3,4]
b = a.splice(0, 4)
a.length == 0 && b.length == 4 && b == "1,2,3,4"

@test array.prototype.indexOf.1
a = [1,2,3,4,3,4,2]
b = a.indexOf(4)
b == 3

@test array.prototype.lastIndexOf.1
a = [1,2,3,4,3,4,2]
b = a.lastIndexOf(4)
b == 5

@test array.isArray.1
a = [1,2,3,4]
Array.isArray(a)

@test array.concat.1
a = ['one',2]
b = a.concat(3,4)
c = [5,6,7]
d = b.concat(c, 8, 9, 10)
d.length == 10 && d[9] == 10 && d[0] == 'one'

@test array.reduce.1
a = [0,1,2,3]
b = a.reduce(function(a, b){ return a + b; });
a.length == 4 && b == 6

@test array.reduce.2
a = [[0,1], [2,3], [4,5]]
b = a.reduce(function(a,b) {return a.concat(b);});
a.length == 3 && b.length == 6 && b == "0,1,2,3,4,5"

@test array.reduce.3
a = []
b = a.reduce(function(a, b){ return a + b; }, [1,2,3]);
b.length == 3

@test array.reduce.4
a = [1]
b = a.reduce(function(a, b){ return a + b; }, 2);
b == 3

@test array.reduceRight.1
a = [[0,1], [2,3], [4,5]]
b = a.reduceRight(function(a,b) {return a.concat(b);});
a.length == 3 && b.length == 6 && b == "4,5,2,3,0,1"

@test array.every.1
function bigEnough(a, b, c) {return (a >= 10);}
a = [12,5,8,130,44]
b = [12,54,18,130,44]
!a.every(bigEnough) && b.every(bigEnough)

@test array.some.1
function bigEnough(a, b, c) {return (a >= 10);}
a = [12,5,8,130,44]
b = [1,2,3,4,5]
a.some(bigEnough) && !b.some(bigEnough)

@test array.forEach.1
z = 0;
a = [1,2,3,4]
a.forEach(function(a, b, c) {z+=a})
z == 10

@test array.map.1
a = [4,64,1024,65536]
b = a.map(Math.sqrt)
b.length == 4 && b == '2,8,32,256'

@test array.filter.1
a = [12, 5, 8, 130, 44];
b = a.filter(function(a, b, c) {return (a >= 10);})
b.length == 3 && b == '12,130,44'

@test array.prototype.toString.1
a = new Array(a,b,c);
Array.prototype.toString = function myToString() { return '' };
result = a.toString();
result.length === 0 && result === ''

@test array.prototype.toString.2
a = new Array(a,b,c);
Array.prototype.toString = function myToString() { return 'x,y,z' };
result = a.toString();
result.length === 5 && result === 'x,y,z'

@test array.prototype.toString.3
a = new Array(a,b,c);
a.join = "disabled";
Object.prototype.toString = function myToString() { return 'x,y,z' };
result = a.toString();
result === 'x,y,z';

@test Array.literal.1
[].length === 0;